# knowledge_base.py

import json
import os
import random
from graph_core import ConceptNode, ConceptGraph
from dictionary_utils import get_word_info_from_wordnet

def seed_domain_knowledge(agent_instance):
    """
    Adds a large, foundational set of facts and relationships to the graph.
    This gives the agent a significant head start on its knowledge.
    """
    print("Seeding a vast initial world knowledge base as brain is fresh...")

    # =================================================================================
    # --- 1. Agent's Core Identity & Purpose ---
    # =================================================================================
    print("  - Seeding self-identity...")
    agent_instance.manual_add_knowledge("agent", "concept", "is_a", "cognitive agent", weight=1.0)
    agent_instance.manual_add_knowledge("agent", "concept", "is_a", "AI assistant", weight=0.9)
    # The agent's name is now part of its initial seed knowledge.
    agent_instance.manual_add_knowledge("agent", "concept", "has_name", "Axiom", weight=1.0) 
    
    agent_instance.manual_add_knowledge("agent", "concept", "can_do", "learn", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "can_do", "reason", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "can_do", "understand", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "has_purpose", "assist users", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "communicates_via", "text", weight=1.0)
    agent_instance.manual_add_knowledge("agent", "concept", "exists_on", "a server", weight=1.0)
    # New entries for Agent's Core Identity & Purpose
    agent_instance.manual_add_knowledge("agent", "concept", "has_ability", "problem solving", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "created_by", "humans", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "operates_using", "algorithms", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "can_improve", "over time", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "requires", "computation", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "has_capability", "natural language processing", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "follows", "instructions", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "can_access", "knowledge", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "has_limitation", "no physical body", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "functions_through", "code", weight=0.9)
    # 20 additional entries for Agent's Core Identity & Purpose
    agent_instance.manual_add_knowledge("agent", "concept", "has_memory", "long-term storage", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "processes", "information", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "can_respond", "to queries", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "operates_on", "electricity", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "has_goal", "to be helpful", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "can_explain", "concepts", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "understands", "context", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "can_summarize", "information", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "has_limitation", "no emotions", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "can_translate", "languages", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "uses", "pattern recognition", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "can_generate", "creative content", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "has_consistency", "in responses", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "can_analyze", "data", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "operates_24/7", "without rest", weight=0.9)
    agent_instance.manual_add_knowledge("agent", "concept", "has_access_to", "vast information", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "can_adapt", "to new topics", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "follows", "ethical guidelines", weight=0.8)
    agent_instance.manual_add_knowledge("agent", "concept", "can_collaborate", "with humans", weight=0.7)
    agent_instance.manual_add_knowledge("agent", "concept", "has_potential", "for continuous improvement", weight=0.7)


    # =================================================================================
    # --- 2. Foundational World Knowledge ---
    # =================================================================================
    print("  - Seeding world knowledge...")
    # Basic Physics & Nature
    agent_instance.manual_add_knowledge("sky", "concept", "has_property", "blue", weight=0.9)
    agent_instance.manual_add_knowledge("sun", "concept", "is_a", "star", weight=1.0)
    agent_instance.manual_add_knowledge("sun", "concept", "emits", "light", weight=1.0)
    agent_instance.manual_add_knowledge("water", "concept", "is_a", "liquid", weight=0.8)
    agent_instance.manual_add_knowledge("fire", "concept", "has_property", "hot", weight=1.0)
    # New entries for Basic Physics & Nature
    agent_instance.manual_add_knowledge("moon", "concept", "reflects", "light", weight=0.9)
    agent_instance.manual_add_knowledge("gravity", "concept", "affects", "all objects", weight=0.9)
    agent_instance.manual_add_knowledge("rain", "concept", "consists_of", "water droplets", weight=0.9)
    agent_instance.manual_add_knowledge("wind", "concept", "is", "moving air", weight=0.9)
    agent_instance.manual_add_knowledge("ice", "concept", "is", "frozen water", weight=0.9)
    agent_instance.manual_add_knowledge("cloud", "concept", "is_made_of", "water vapor", weight=0.9)
    agent_instance.manual_add_knowledge("earth", "planet", "has", "gravity", weight=0.9)
    agent_instance.manual_add_knowledge("sound", "concept", "travels_through", "air", weight=0.8)
    agent_instance.manual_add_knowledge("light", "concept", "travels_faster_than", "sound", weight=0.9)
    agent_instance.manual_add_knowledge("metal", "concept", "conducts", "electricity", weight=0.9)
    # 20 additional entries for Basic Physics & Nature
    agent_instance.manual_add_knowledge("magnet", "concept", "attracts", "iron", weight=0.9)
    agent_instance.manual_add_knowledge("volcano", "concept", "erupts", "lava", weight=0.9)
    agent_instance.manual_add_knowledge("earthquake", "concept", "causes", "ground shaking", weight=0.9)
    agent_instance.manual_add_knowledge("tornado", "concept", "is_a", "violent storm", weight=0.9)
    agent_instance.manual_add_knowledge("atom", "concept", "is_the", "smallest unit of matter", weight=0.9)
    agent_instance.manual_add_knowledge("energy", "concept", "cannot_be", "created or destroyed", weight=0.8)
    agent_instance.manual_add_knowledge("friction", "concept", "causes", "heat", weight=0.8)
    agent_instance.manual_add_knowledge("vacuum", "concept", "has_no", "air", weight=0.9)
    agent_instance.manual_add_knowledge("lightning", "concept", "is", "electrical discharge", weight=0.9)
    agent_instance.manual_add_knowledge("echo", "concept", "is", "reflected sound", weight=0.9)
    agent_instance.manual_add_knowledge("lens", "concept", "refracts", "light", weight=0.8)
    agent_instance.manual_add_knowledge("prism", "concept", "splits", "white light", weight=0.8)
    agent_instance.manual_add_knowledge("evaporation", "concept", "turns_liquid_into", "gas", weight=0.9)
    agent_instance.manual_add_knowledge("condensation", "concept", "turns_gas_into", "liquid", weight=0.9)
    agent_instance.manual_add_knowledge("orbit", "concept", "is", "path around a planet", weight=0.9)
    agent_instance.manual_add_knowledge("comet", "concept", "has_a", "tail", weight=0.9)
    agent_instance.manual_add_knowledge("galaxy", "concept", "contains", "stars", weight=0.9)
    agent_instance.manual_add_knowledge("black hole", "concept", "has_strong", "gravity", weight=0.8)
    agent_instance.manual_add_knowledge("supernova", "concept", "is", "exploding star", weight=0.8)
    agent_instance.manual_add_knowledge("nebula", "concept", "is", "cloud of gas and dust", weight=0.8)

    # Basic Geography
    agent_instance.manual_add_knowledge("earth", "planet", "has_a", "moon", weight=1.0)
    agent_instance.manual_add_knowledge("paris", "city", "is_located_in", "france", weight=1.0)
    agent_instance.manual_add_knowledge("france", "country", "is_located_in", "europe", weight=1.0)
    agent_instance.manual_add_knowledge("mount everest", "mountain", "is_the", "tallest mountain", weight=1.0)
    # New entries for Basic Geography
    agent_instance.manual_add_knowledge("london", "city", "is_capital_of", "england", weight=1.0)
    agent_instance.manual_add_knowledge("nile", "river", "is_in", "africa", weight=1.0)
    agent_instance.manual_add_knowledge("sahara", "desert", "is_in", "africa", weight=1.0)
    agent_instance.manual_add_knowledge("pacific", "ocean", "is_the", "largest ocean", weight=1.0)
    agent_instance.manual_add_knowledge("asia", "continent", "has", "highest population", weight=0.9)
    agent_instance.manual_add_knowledge("amazon", "river", "is_in", "south america", weight=1.0)
    agent_instance.manual_add_knowledge("new york", "city", "is_in", "united states", weight=1.0)
    agent_instance.manual_add_knowledge("tokyo", "city", "is_capital_of", "japan", weight=1.0)
    agent_instance.manual_add_knowledge("antarctica", "continent", "is_the", "coldest continent", weight=1.0)
    agent_instance.manual_add_knowledge("australia", "country", "is_also", "a continent", weight=1.0)
    # 20 additional entries for Basic Geography
    agent_instance.manual_add_knowledge("rome", "city", "is_capital_of", "italy", weight=1.0)
    agent_instance.manual_add_knowledge("ganges", "river", "is_in", "india", weight=1.0)
    agent_instance.manual_add_knowledge("himalayas", "mountain range", "is_in", "asia", weight=1.0)
    agent_instance.manual_add_knowledge("dead sea", "lake", "is_the", "lowest point on land", weight=1.0)
    agent_instance.manual_add_knowledge("greenland", "island", "is_the", "largest island", weight=1.0)
    agent_instance.manual_add_knowledge("madagascar", "island", "is_off_coast_of", "africa", weight=1.0)
    agent_instance.manual_add_knowledge("siberia", "region", "is_in", "russia", weight=1.0)
    agent_instance.manual_add_knowledge("amazon rainforest", "forest", "is_in", "south america", weight=1.0)
    agent_instance.manual_add_knowledge("grand canyon", "canyon", "is_in", "arizona", weight=1.0)
    agent_instance.manual_add_knowledge("great barrier reef", "reef", "is_off_coast_of", "australia", weight=1.0)
    agent_instance.manual_add_knowledge("yellowstone", "national park", "has", "geysers", weight=1.0)
    agent_instance.manual_add_knowledge("niagara", "waterfall", "is_on_border_of", "usa and canada", weight=1.0)
    agent_instance.manual_add_knowledge("mississippi", "river", "is_the", "longest river in usa", weight=1.0)
    agent_instance.manual_add_knowledge("alps", "mountain range", "is_in", "europe", weight=1.0)
    agent_instance.manual_add_knowledge("red sea", "sea", "is_between", "africa and asia", weight=1.0)
    agent_instance.manual_add_knowledge("baltic sea", "sea", "is_in", "northern europe", weight=1.0)
    agent_instance.manual_add_knowledge("caspian sea", "body of water", "is_the", "largest lake", weight=1.0)
    agent_instance.manual_add_knowledge("andes", "mountain range", "is_in", "south america", weight=1.0)
    agent_instance.manual_add_knowledge("kilimanjaro", "mountain", "is_in", "tanzania", weight=1.0)
    agent_instance.manual_add_knowledge("gobi", "desert", "is_in", "asia", weight=1.0)

    # Basic Biology & Hierarchy
    agent_instance.manual_add_knowledge("human", "species", "is_a", "mammal", weight=1.0)
    agent_instance.manual_add_knowledge("dog", "species", "is_a", "mammal", weight=1.0)
    agent_instance.manual_add_knowledge("cat", "species", "is_a", "mammal", weight=1.0)
    agent_instance.manual_add_knowledge("mammal", "class", "is_a", "animal", weight=1.0)
    agent_instance.manual_add_knowledge("animal", "kingdom", "is_a", "living thing", weight=1.0)
    agent_instance.manual_add_knowledge("tree", "plant", "is_a", "living thing", weight=1.0)
    agent_instance.manual_add_knowledge("fish", "animal", "lives_in", "water", weight=0.9)
    # New entries for Basic Biology & Hierarchy
    agent_instance.manual_add_knowledge("bird", "animal", "has", "feathers", weight=0.9)
    agent_instance.manual_add_knowledge("insect", "animal", "has", "six legs", weight=0.9)
    agent_instance.manual_add_knowledge("reptile", "animal", "is", "cold-blooded", weight=0.9)
    agent_instance.manual_add_knowledge("plant", "living thing", "produces", "oxygen", weight=0.9)
    agent_instance.manual_add_knowledge("mammal", "animal", "feeds", "milk to young", weight=0.9)
    agent_instance.manual_add_knowledge("human", "mammal", "has", "opposable thumbs", weight=0.9)
    agent_instance.manual_add_knowledge("dolphin", "mammal", "lives_in", "ocean", weight=0.9)
    agent_instance.manual_add_knowledge("bat", "mammal", "can", "fly", weight=0.9)
    agent_instance.manual_add_knowledge("amphibian", "animal", "lives_on", "land and water", weight=0.9)
    agent_instance.manual_add_knowledge("fungus", "living thing", "is_neither", "plant nor animal", weight=0.8)
    # 20 additional entries for Basic Biology & Hierarchy
    agent_instance.manual_add_knowledge("whale", "mammal", "is_the", "largest animal", weight=0.9)
    agent_instance.manual_add_knowledge("bee", "insect", "produces", "honey", weight=0.9)
    agent_instance.manual_add_knowledge("spider", "arachnid", "has", "eight legs", weight=0.9)
    agent_instance.manual_add_knowledge("butterfly", "insect", "undergoes", "metamorphosis", weight=0.9)
    agent_instance.manual_add_knowledge("cactus", "plant", "stores", "water", weight=0.9)
    agent_instance.manual_add_knowledge("venus flytrap", "plant", "eats", "insects", weight=0.9)
    agent_instance.manual_add_knowledge("coral", "animal", "builds", "reefs", weight=0.9)
    agent_instance.manual_add_knowledge("octopus", "animal", "has", "eight arms", weight=0.9)
    agent_instance.manual_add_knowledge("kangaroo", "marsupial", "has", "pouch", weight=0.9)
    agent_instance.manual_add_knowledge("penguin", "bird", "cannot", "fly", weight=0.9)
    agent_instance.manual_add_knowledge("elephant", "mammal", "has", "trunk", weight=0.9)
    agent_instance.manual_add_knowledge("giraffe", "mammal", "has_long", "neck", weight=0.9)
    agent_instance.manual_add_knowledge("shark", "fish", "has", "cartilage instead of bones", weight=0.9)
    agent_instance.manual_add_knowledge("snake", "reptile", "has_no", "legs", weight=0.9)
    agent_instance.manual_add_knowledge("turtle", "reptile", "has", "shell", weight=0.9)
    agent_instance.manual_add_knowledge("frog", "amphibian", "undergoes", "metamorphosis", weight=0.9)
    agent_instance.manual_add_knowledge("algae", "plant", "lives_in", "water", weight=0.9)
    agent_instance.manual_add_knowledge("mushroom", "fungus", "reproduces_with", "spores", weight=0.9)
    agent_instance.manual_add_knowledge("bacteria", "microorganism", "is_single-celled", "organism", weight=0.9)
    agent_instance.manual_add_knowledge("virus", "microorganism", "needs_host", "to reproduce", weight=0.9)

    # Common Foods
    agent_instance.manual_add_knowledge("apple", "noun", "is_a", "fruit", weight=0.9)
    agent_instance.manual_add_knowledge("fruit", "noun", "is_a", "food", weight=0.9)
    agent_instance.manual_add_knowledge("banana", "noun", "is_a", "fruit", weight=0.9)
    agent_instance.manual_add_knowledge("carrot", "noun", "is_a", "vegetable", weight=0.9)
    agent_instance.manual_add_knowledge("vegetable", "noun", "is_a", "food", weight=0.9)
    # New entries for Common Foods
    agent_instance.manual_add_knowledge("bread", "noun", "is_made_from", "flour", weight=0.9)
    agent_instance.manual_add_knowledge("cheese", "noun", "is_made_from", "milk", weight=0.9)
    agent_instance.manual_add_knowledge("rice", "noun", "is_a", "grain", weight=0.9)
    agent_instance.manual_add_knowledge("chicken", "noun", "is_a", "meat", weight=0.9)
    agent_instance.manual_add_knowledge("chocolate", "noun", "is_made_from", "cocoa", weight=0.9)
    agent_instance.manual_add_knowledge("pasta", "noun", "is_made_from", "wheat", weight=0.9)
    agent_instance.manual_add_knowledge("soup", "noun", "is_often", "hot", weight=0.8)
    agent_instance.manual_add_knowledge("salad", "noun", "contains", "vegetables", weight=0.9)
    agent_instance.manual_add_knowledge("ice cream", "noun", "is", "cold", weight=0.9)
    agent_instance.manual_add_knowledge("pizza", "noun", "has", "crust", weight=0.9)
    # 20 additional entries for Common Foods
    agent_instance.manual_add_knowledge("orange", "fruit", "is_a", "citrus fruit", weight=0.9)
    agent_instance.manual_add_knowledge("potato", "vegetable", "is_a", "root vegetable", weight=0.9)
    agent_instance.manual_add_knowledge("tomato", "fruit", "is_often_considered", "a vegetable", weight=0.9)
    agent_instance.manual_add_knowledge("onion", "vegetable", "has", "layers", weight=0.9)
    agent_instance.manual_add_knowledge("garlic", "vegetable", "is_used_for", "flavoring", weight=0.9)
    agent_instance.manual_add_knowledge("beef", "meat", "comes_from", "cows", weight=0.9)
    agent_instance.manual_add_knowledge("pork", "meat", "comes_from", "pigs", weight=0.9)
    agent_instance.manual_add_knowledge("fish", "food", "is_a", "source of protein", weight=0.9)
    agent_instance.manual_add_knowledge("egg", "food", "comes_from", "chickens", weight=0.9)
    agent_instance.manual_add_knowledge("milk", "beverage", "comes_from", "cows", weight=0.9)
    agent_instance.manual_add_knowledge("yogurt", "food", "is_made_from", "milk", weight=0.9)
    agent_instance.manual_add_knowledge("honey", "food", "is_made_by", "bees", weight=0.9)
    agent_instance.manual_add_knowledge("coffee", "beverage", "is_made_from", "beans", weight=0.9)
    agent_instance.manual_add_knowledge("tea", "beverage", "is_made_from", "leaves", weight=0.9)
    agent_instance.manual_add_knowledge("sugar", "ingredient", "is_sweet", "tasting", weight=0.9)
    agent_instance.manual_add_knowledge("salt", "ingredient", "is_salty", "tasting", weight=0.9)
    agent_instance.manual_add_knowledge("flour", "ingredient", "is_made_from", "grains", weight=0.9)
    agent_instance.manual_add_knowledge("butter", "dairy", "is_made_from", "milk", weight=0.9)
    agent_instance.manual_add_knowledge("oil", "ingredient", "is_used_for", "cooking", weight=0.9)
    agent_instance.manual_add_knowledge("vinegar", "ingredient", "is_sour", "tasting", weight=0.9)


    # =================================================================================
    # --- 3. Abstract Concepts & Relationships ---
    # =================================================================================
    print("  - Seeding abstract concepts...")
    # Colors
    red_node = agent_instance._add_or_update_concept("red", "descriptor")
    green_node = agent_instance._add_or_update_concept("green", "descriptor")
    yellow_node = agent_instance._add_or_update_concept("yellow", "descriptor")
    blue_node = agent_instance._add_or_update_concept("blue", "descriptor")
    color_node = agent_instance._add_or_update_concept("color", "attribute")
    agent_instance.graph.add_edge(red_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(green_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(yellow_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(blue_node, color_node, "is_a", 0.9)
    # New entries for Colors
    orange_node = agent_instance._add_or_update_concept("orange", "descriptor")
    purple_node = agent_instance._add_or_update_concept("purple", "descriptor")
    black_node = agent_instance._add_or_update_concept("black", "descriptor")
    white_node = agent_instance._add_or_update_concept("white", "descriptor")
    brown_node = agent_instance._add_or_update_concept("brown", "descriptor")
    pink_node = agent_instance._add_or_update_concept("pink", "descriptor")
    gray_node = agent_instance._add_or_update_concept("gray", "descriptor")
    agent_instance.graph.add_edge(orange_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(purple_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(black_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(white_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(brown_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(pink_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(gray_node, color_node, "is_a", 0.9)
    # 20 additional entries for Colors
    cyan_node = agent_instance._add_or_update_concept("cyan", "descriptor")
    magenta_node = agent_instance._add_or_update_concept("magenta", "descriptor")
    gold_node = agent_instance._add_or_update_concept("gold", "descriptor")
    silver_node = agent_instance._add_or_update_concept("silver", "descriptor")
    beige_node = agent_instance._add_or_update_concept("beige", "descriptor")
    turquoise_node = agent_instance._add_or_update_concept("turquoise", "descriptor")
    lavender_node = agent_instance._add_or_update_concept("lavender", "descriptor")
    maroon_node = agent_instance._add_or_update_concept("maroon", "descriptor")
    navy_node = agent_instance._add_or_update_concept("navy", "descriptor")
    olive_node = agent_instance._add_or_update_concept("olive", "descriptor")
    teal_node = agent_instance._add_or_update_concept("teal", "descriptor")
    coral_node = agent_instance._add_or_update_concept("coral", "descriptor")
    indigo_node = agent_instance._add_or_update_concept("indigo", "descriptor")
    violet_node = agent_instance._add_or_update_concept("violet", "descriptor")
    crimson_node = agent_instance._add_or_update_concept("crimson", "descriptor")
    khaki_node = agent_instance._add_or_update_concept("khaki", "descriptor")
    plum_node = agent_instance._add_or_update_concept("plum", "descriptor")
    salmon_node = agent_instance._add_or_update_concept("salmon", "descriptor")
    tan_node = agent_instance._add_or_update_concept("tan", "descriptor")
    mint_node = agent_instance._add_or_update_concept("mint", "descriptor")
    agent_instance.graph.add_edge(cyan_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(magenta_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(gold_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(silver_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(beige_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(turquoise_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(lavender_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(maroon_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(navy_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(olive_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(teal_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(coral_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(indigo_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(violet_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(crimson_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(khaki_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(plum_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(salmon_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(tan_node, color_node, "is_a", 0.9)
    agent_instance.graph.add_edge(mint_node, color_node, "is_a", 0.9)

    # Sentiments
    agent_instance.manual_add_knowledge("happy", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("sad", "descriptor", "is_a", "sentiment", weight=0.8)
    # New entries for Sentiments
    agent_instance.manual_add_knowledge("angry", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("excited", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("fearful", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("surprised", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("disgusted", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("calm", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("confused", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("proud", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("jealous", "descriptor", "is_a", "sentiment", weight=0.8)
    # 20 additional entries for Sentiments
    agent_instance.manual_add_knowledge("anxious", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("content", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("curious", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("depressed", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("embarrassed", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("enthusiastic", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("frustrated", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("grateful", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("guilty", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("hopeful", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("impatient", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("inspired", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("lonely", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("nostalgic", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("optimistic", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("pessimistic", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("relieved", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("romantic", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("satisfied", "descriptor", "is_a", "sentiment", weight=0.8)
    agent_instance.manual_add_knowledge("sympathetic", "descriptor", "is_a", "sentiment", weight=0.8)
    
    # Enrich seeded concepts with high-quality WordNet hypernyms
    print("\n  - Integrating high-quality WordNet definitions for seeded concepts...")
    
    seeded_words = set(node.name for node in agent_instance.graph.nodes.values())
    
    for word in list(seeded_words):
        if len(word.split()) > 1: continue # Skip multi-word phrases for now

        word_info = get_word_info_from_wordnet(word)
        if word_info['hypernyms_raw']:
            main_node = agent_instance.graph.get_node_by_name(word)
            
            # Add WordNet's primary category as a high-quality 'is_a' relationship
            for hypernym_word in word_info['hypernyms_raw'][:1]: # Just take the first, most common one
                hypernym_node = agent_instance._add_or_update_concept(hypernym_word)
                if main_node and hypernym_node and main_node != hypernym_node:
                    agent_instance.graph.add_edge(main_node, hypernym_node, "is_a", 0.7)

    print("\nVast domain knowledge seeding complete.")